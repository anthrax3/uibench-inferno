!function(r){function a(e){if(t[e])return t[e].exports;var n=t[e]={exports:{},id:e,loaded:!1};return r[e].call(n.exports,n,n.exports,a),n.loaded=!0,n.exports}var t={};return a.m=r,a.c=t,a.p="",a(0)}([function(r,a,t){r.exports=t(1)},function(r,a){"use strict";!function(){function r(r,a,t){return a.text!==t.text}function a(r){console.log("Clicked"+r.xtag),r.stopPropagation()}function t(r,a,t){return a.data!==t.data}uibench.init("Inferno","0.7.22");var e={componentShouldUpdate:t},n={componentShouldUpdate:r},o=Inferno.createBlueprint({tag:"div",className:"AnimBox",attrs:{arg:0},style:{arg:1}}),i=function(r){var a=r.data,t=a.time,e="border-radius:"+(t%10).toString()+"px;background:rgba(0,0,0,"+(.5+t%10/10).toString()+")";return o({"data-id":a.id},e)},g=Inferno.createBlueprint({tag:"div",className:"Anim",children:{arg:0}},4),c=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2},key:{arg:3}}),d=function(r){for(var a=r.data,t=a.items,n=[],o=0;o<t.length;o++){var d=t[o];n.push(c(i,{data:d},e,d.id))}return g(n)},u=Inferno.createBlueprint({tag:"td",className:"TableCell",children:{arg:0},events:{arg:1},attrs:{arg:2}},1),l=function(r){return u(r.text,{onclick:a},{xtag:r.text})},s=Inferno.createBlueprint({tag:"tr",children:{arg:0},className:{arg:1},attrs:{arg:2}},4),f=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2},key:{arg:3}}),p=function(r){var a=r.data,t="TableRow";a.active&&(t="TableRow active");for(var e=a.props,o=[f(l,{text:"#"+a.id},n,a.id)],i=0;i<e.length;i++)o.push(f(l,{text:e[i]},n,a.id));return s(o,t,{"data-id":a.id})},h=Inferno.createBlueprint({tag:"table",className:"Table",children:{arg:0}},2),I=Inferno.createBlueprint({tag:"tbody",children:{arg:0}},4),v=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2},key:{arg:3}}),B=function(r){for(var a=r.data.items,t=[],n=0;n<a.length;n++){var o=a[n];t.push(v(p,{data:o},e,o.id))}return h(I(t))},m=Inferno.createBlueprint({tag:"li",className:"TreeLeaf",children:{arg:0}},1),k=function(r){return m(r.data.id)},x=Inferno.createBlueprint({tag:"ul",className:"TreeNode",children:{arg:0}},4),b=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2},key:{arg:3}}),N=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2},key:{arg:3}}),y=function U(r){for(var a=r.data,t=[],n=0;n<a.children.length;n++){var o=a.children[n];o.container?t.push(b(U,{data:o},e,o.id)):t.push(N(k,{data:o},e,o.id))}return x(t)},T=Inferno.createBlueprint({tag:"div",className:"Tree",children:{arg:0}},2),S=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2}}),M=function(r){return T(S(y,{data:r.data.root},e))},O=Inferno.createBlueprint({tag:"div",className:"Main",children:{arg:0}},2),w=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2}}),A=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2}}),C=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2}}),D=function(r){var a,t=r.data,n=t.location;return"table"===n?a=w(B,{data:t.table},e):"anim"===n?a=A(d,{data:t.anim},e):"tree"===n&&(a=C(M,{data:t.tree},e)),new O(a)},L=Inferno.createBlueprint({tag:{arg:0},attrs:{arg:1},hooks:{arg:2}}),R=Inferno.createBlueprint({tag:"pre",children:{arg:0}},5);document.addEventListener("DOMContentLoaded",function(r){var a=document.querySelector("#App");uibench.run(function(r){InfernoDOM.render(L(D,{data:r},e),a)},function(r){InfernoDOM.render(R(JSON.stringify(r,null," ")),a)})})}()}]);